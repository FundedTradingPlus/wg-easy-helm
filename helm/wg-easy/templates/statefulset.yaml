{{- if .Values.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "wg-easy.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "wg-easy.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "wg-easy.fullname" . }}-headless
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "wg-easy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "wg-easy.selectorLabels" . | nindent 8 }}
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "wg-easy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.volume.enabled }}
      volumes:
        - name: wireguard-volume
          persistentVolumeClaim:
            claimName: {{ include "wg-easy.fullname" . }}
      {{- end }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ include "wg-easy.wg-easyVersion" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.command }}
          command: {{ toYaml .Values.command | nindent 12 }}
          {{- end }}
          ports:
            - name: udp-vpn
              containerPort: 51820
              protocol: UDP
            - name: http-ui
              containerPort: 51821
              protocol: TCP
          {{- if .Values.volume.enabled }}
          volumeMounts:
            - mountPath: "/etc/wireguard"
              name: wireguard-volume
          {{- end }}
          livenessProbe:
            httpGet:
              path: {{ .Values.healthCheckUrl | quote }}
              port: http-ui
          readinessProbe:
            httpGet:
              path: {{ .Values.healthCheckUrl | quote }}
              port: http-ui
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- if not .Values.secret.create }}
          {{- range $key, $value := .Values.environmentVariables }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          {{- if .Values.enableHttpOpenTelemetryCollector }}
          - name: COLLECTOR_OTLP_ENABLED
            value: "true"
          {{- end }}
          {{- if .Values.enableHttpZipkinCollector }}
          - name: COLLECTOR_ZIPKIN_HOST_PORT
            value: ":9411"
          {{- end }}
          {{- if .Values.secret.create }}
          envFrom:
            - secretRef:
                {{- if .Values.secret.name }}
                name: {{ .Values.secret.name }}
                {{- else }}
                name: {{ include "wg-easy.fullname" . }}
                {{- end }}
          {{- end }}
        - name: metrics
          image: mindflavor/prometheus-wireguard-exporter:latest
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          args: ["-a", "true"]
          ports:
            - name: metrics
              containerPort: 9586
              protocol: TCP
          env:
            - name: WG_EXPORTER_INTERFACE
              value: "wg0"
            - name: TZ
              value: "America/Los_Angeles"
            - name: EXPORT_LATEST_HANDSHAKE_DELAY
              value: "true"
            - name: PROMETHEUS_WIREGUARD_EXPORTER_CONFIG_FILE_NAMES
              value: "/etc/wireguard/wg0.conf"
            - name: PROMETHEUS_WIREGUARD_EXPORTER_PREPEND_SUDO_ENABLED
              value: "true"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
